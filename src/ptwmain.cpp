// -*- C++ -*- generated by wxGlade 0.6.2 on Sun Feb 17 09:28:37 2008
// $Id$

#include "ptwmain.h"

#include "tools.h"

// begin wxGlade: ::extracode
// end wxGlade

PTWMain::PTWMain(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long WXUNUSED(style))
    : wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    {
	#include "art/pwtutor-16.h"
	#include "art/pwtutor-22.h"
	#include "art/pwtutor-32.h"
	#include "art/pwtutor-48.h"

	wxIconBundle progicon;

	progicon.AddIcon( wxIconFromMemory(pwtutor_16_png) );
	progicon.AddIcon( wxIconFromMemory(pwtutor_22_png) );
	progicon.AddIcon( wxIconFromMemory(pwtutor_32_png) );
	progicon.AddIcon( wxIconFromMemory(pwtutor_48_png) );

	SetIcons(progicon);
    }

    // begin wxGlade: PTWMain::PTWMain
    sizer2_staticbox = new wxStaticBox(this, -1, _("Learning List"));
    listctrlPasslist = new wxListCtrl(this, myID_PASSLIST, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER);
    buttonNewPass = new wxButton(this, myID_NEWPASS, _("&Learn New Password"));
    buttonAbout = new wxButton(this, myID_ABOUT, _("&About / Config"));
    buttonHide = new wxButton(this, myID_HIDE, _("&Hide"));

    set_properties();
    do_layout();
    // end wxGlade
}

void PTWMain::set_properties()
{
    // begin wxGlade: PTWMain::set_properties
    SetTitle(_("CryptoTE Password Tutor"));
    SetSize(wxSize(400, 300));
    SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));
    // end wxGlade
}

void PTWMain::do_layout()
{
    // begin wxGlade: PTWMain::do_layout
    wxBoxSizer* sizer1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer3 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer2 = new wxStaticBoxSizer(sizer2_staticbox, wxVERTICAL);
    wxStaticText* label1 = new wxStaticText(this, wxID_ANY, _("CryptoTE Password Tutor"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    label1->SetFont(wxFont(18, wxDEFAULT, wxNORMAL, wxNORMAL, 0, wxT("")));
    sizer1->Add(label1, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 6);
    sizer2->Add(listctrlPasslist, 1, wxALL|wxEXPAND, 6);
    sizer2->Add(buttonNewPass, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_HORIZONTAL, 6);
    sizer1->Add(sizer2, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 6);
    sizer3->Add(buttonAbout, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
    sizer3->Add(5, 5, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer3->Add(buttonHide, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
    sizer1->Add(sizer3, 0, wxALL|wxEXPAND, 4);
    SetSizer(sizer1);
    Layout();
    Centre();
    SetSize(wxSize(400, 300));
    // end wxGlade
}

BEGIN_EVENT_TABLE(PTWMain, wxFrame)
    // begin wxGlade: PTWMain::event_table
    EVT_LIST_ITEM_ACTIVATED(myID_PASSLIST, PTWMain::OnPasslistItemActivated)
    EVT_LIST_ITEM_RIGHT_CLICK(myID_PASSLIST, PTWMain::OnPasslistItemRightClick)
    EVT_BUTTON(myID_NEWPASS, PTWMain::OnButtonNewPass)
    EVT_BUTTON(myID_ABOUT, PTWMain::OnButtonAbout)
    EVT_BUTTON(myID_HIDE, PTWMain::OnButtonClose)
    // end wxGlade
END_EVENT_TABLE();

void PTWMain::OnPasslistItemActivated(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (PTWMain::OnPasslistItemActivated) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

void PTWMain::OnPasslistItemRightClick(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (PTWMain::OnPasslistItemRightClick) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

void PTWMain::OnButtonNewPass(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (PTWMain::OnButtonNewPass) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

void PTWMain::OnButtonAbout(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (PTWMain::OnButtonAbout) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

void PTWMain::OnButtonClose(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (PTWMain::OnButtonClose) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}

// wxGlade: add PTWMain event handlers
